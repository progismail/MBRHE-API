node {
    def built_img = ''
    stage('Checkout git repo') {
      git branch: 'master', credentialsId: '12a44e88-76a3-4e85-b983-95dec84802c5', url: params.git_repo
    }
    stage('Build and push Docker image') {
      sh(script: "docker login ${registry_url} -u ${acr_username} -p ${acr_password}", returnStdout: true)
      sh(script: "docker build -t ${registry_url}/demoapi:${BUILD_NUMBER} -f src/Api/Dockerfile .", returnStdout: true)
      sh(script: "docker push ${registry_url}/demoapi:${BUILD_NUMBER}", returnStdout: true)
      sh(script: "docker rmi ${registry_url}/demoapi:${BUILD_NUMBER}", returnStdout: true)
    }
    stage("Unit Tests") {
      sh "sudo dotnet test test/Api.Tests/ --logger:\"trx;LogFileName=unit.testresults\""
      xunit([MSTest(deleteOutputFiles: true, failIfNotNew: true, pattern: '**/*.testresults', skipNoTestFiles: false, stopProcessingIfError: true)])
    }
    
    stage('Deploy into k8s') {
      sh(script: "cat cicd/k8s.yaml | sed -e 's/build_number/${BUILD_NUMBER}/g' -e 's/YourACRName/${acr_username}/g' | kubectl apply -f - --kubeconfig /var/lib/jenkins/.kube/config", returnStdout: true)
    }
    stage("Integration Tests") {
      sh "cd test/Api.IntegrationTests && npm install && npm run api-test-prod"
    }
    stage("Load Tests") {
      sh "sudo npm install -g loadtest && sudo loadtest http://40.78.21.213/WeatherForecastByMBRHE -t 20 -c 10"
    }
}